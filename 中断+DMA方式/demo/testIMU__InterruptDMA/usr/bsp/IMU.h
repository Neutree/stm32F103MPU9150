#ifndef IMU_H
#define IMU_H

////////////////////////////
///include file
///////////////////////////
#include "HAL_IMU.h"

////////////////////////////
///航空使用的三轴：俯仰、横滚、航向
///////////////////////////

class Three_Axis_Aviation_Int
{
public:
		int pitch;
		int roll;
		int yaw;
};


class Three_Axis_Aviation_Double
{
public:
		double pitch;
		double roll;
		double yaw;
};




class IMU{
public:
	//IMU数据存放的变量
	IMUData Data;
	//是否使用加速度、角速度传感器
	u8 Use_Acc_Gyro;
	//是否使用磁力计	
	u8 Use_Mag;
	//是否使用气压计
	u8 Use_Baro;
	
public:
	 ////////////////////////////
	 ///构造函数
	 ////////////////////////////
		IMU();

	///////////////////////////
	///析构函数
	///////////////////////////
		~IMU();



	//////////////////////////
	///IMU初始化函数
	///@retval -1:检测到硬件 -2:检测到部分硬件 -3:正在检测 -0:未检测到硬件
	//////////////////////////
		u8 Init();//初始化IMU


	////////////////////////////////
	///获取加速度原始值
	///@retval 返回三轴的加速度值
	///////////////////////////////
		Three_Axis_Aviation_Int Get_ACC_Raw();//获取加速度原始值


	////////////////////////////////
	///获取角速度原始值
	///@retval 返回三轴的角速度值 
	///////////////////////////////
		Three_Axis_Aviation_Int Get_GYR_Raw();//获取角速度原始值

		
	////////////////////////////////
	///获取加速度计的温度原始值
	///@retval 返回加速度计的温度值
	///////////////////////////////
		int Get_ACC_TEMP_Raw();//获取加速度计温度原始值
		
		
		
	////////////////////////////////
	///获取磁力计原始值
	///@retval 返回三轴的磁力计原始值
	///////////////////////////////
		Three_Axis_Aviation_Int Get_Compass_Raw();//读取磁力计原始值

		
	////////////////////////////////
	///获取气压计原始值
	///@retval 返回气压计原始值
	///////////////////////////////
		int32_t Get_Baro_Raw();//获取气压计的原始气压值
	
	
	//////////////////////////////
	///从硬件更新加速度、角速度值到内存
	///@return -0:发送更新数据失败，没有开启跟新该传感器的开关 1:命令将会发送（具体的发送时间取决于队列中的排队的命令的数量）
	//////////////////////////////
		u8 Update_Data_ACC_GYR();
		
	
	
	//////////////////////////////
	///从硬件更新磁力计数据到内存
	///@return -0:发送更新数据失败，没有开启跟新该传感器的开关 1:命令将会发送（具体的发送时间取决于队列中的排队的命令的数量）
	///////////////////////////////
		u8 Update_Data_Compass();
			
		
	
	/////////////////////////////
	///从硬件更新IMU加速度、加速度计温度、角速度、磁力计数据
	///@return -0:发送更新数据失败，没有开启跟新该传感器的开关 1:命令将会发送（具体的发送时间取决于队列中的排队的命令的数量）
	////////////////////////////
		u8 Update_Data_ACC_GYR_Compass();//从硬件更新角速度、加速度、磁力计数据
			
			
			
	//////////////////////////////
	///从硬件更新气压值数据
	///@attention 由于硬件限制，此函数需在大于10ms的间隔才能调用，在调用2次后获得一次有效数据
	///@return -0:发送更新数据失败，没有开启跟新该传感器的开关 1:命令将会发送（具体的发送时间取决于队列中的排队的命令的数量）
	/////////////////////////////
		u8 Update_Data_Baro();//从硬件更新气压计值



	////////////////////////////////
	///获取结算过后的三轴的角度值
	///@retval 返回结算过后的三轴的角度值
	///////////////////////////////	
		Three_Axis_Aviation_Double Get_Angle();//通过加速度、角速度、磁力计解算成角度

		
		
	////////////////////////////////
	///获取经计算过后的高度值
	///@retval 返回经计算过后的高度值*100
	///////////////////////////////
		int32_t Get_Altidude();//获取海拔
		
		
};
#endif


